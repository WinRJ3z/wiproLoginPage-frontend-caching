# Generated by Django 4.2.3 on 2023-08-19 14:08

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("authentication", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AlpineVersions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version", models.TextField(blank=True, null=True)),
                ("release_date", models.TextField(blank=True, null=True)),
                ("end_of_life_date", models.TextField(blank=True, null=True)),
                ("latest", models.TextField(blank=True, null=True)),
            ],
            options={"db_table": "alpine_versions", "managed": False,},
        ),
        migrations.CreateModel(
            name="KindleVersions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version", models.TextField(blank=True, null=True)),
                ("release_date", models.TextField(blank=True, null=True)),
                ("end_of_life_date", models.TextField(blank=True, null=True)),
                ("latest", models.TextField(blank=True, null=True)),
            ],
            options={"db_table": "kindle_versions", "managed": False,},
        ),
        migrations.CreateModel(
            name="PostgresqlVersions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version", models.TextField(blank=True, null=True)),
                ("release_date", models.TextField(blank=True, null=True)),
                ("end_of_life_date", models.TextField(blank=True, null=True)),
                ("latest", models.TextField(blank=True, null=True)),
            ],
            options={"db_table": "postgresql_versions", "managed": False,},
        ),
        migrations.CreateModel(
            name="PythonVersions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version", models.TextField(blank=True, null=True)),
                ("release_date", models.TextField(blank=True, null=True)),
                ("end_of_life_date", models.TextField(blank=True, null=True)),
                ("latest", models.TextField(blank=True, null=True)),
            ],
            options={"db_table": "python_versions", "managed": False,},
        ),
        migrations.CreateModel(
            name="RubyVersions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version", models.TextField(blank=True, null=True)),
                ("release_date", models.TextField(blank=True, null=True)),
                ("end_of_life_date", models.TextField(blank=True, null=True)),
                ("latest", models.TextField(blank=True, null=True)),
            ],
            options={"db_table": "ruby_versions", "managed": False,},
        ),
    ]
